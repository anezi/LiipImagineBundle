<?xml version="1.0" encoding="utf-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>

        <!-- Utility classes -->

        <parameter key="anezi_imagine.filter.configuration.class">Anezi\ImagineBundle\Imagine\Filter\FilterConfiguration</parameter>
        <parameter key="anezi_imagine.filter.manager.class">Anezi\ImagineBundle\Imagine\Filter\FilterManager</parameter>
        <parameter key="anezi_imagine.data.manager.class">Anezi\ImagineBundle\Imagine\Data\DataManager</parameter>
        <parameter key="anezi_imagine.cache.manager.class">Anezi\ImagineBundle\Imagine\Cache\CacheManager</parameter>
        <parameter key="anezi_imagine.cache.signer.class">Anezi\ImagineBundle\Imagine\Cache\Signer</parameter>
        <parameter key="anezi_imagine.binary.mime_type_guesser.class">Anezi\ImagineBundle\Binary\SimpleMimeTypeGuesser</parameter>

        <!-- Controller class -->

        <parameter key="anezi_imagine.controller.class">Anezi\ImagineBundle\Controller\ImagineController</parameter>

        <!-- Templating classes -->

        <parameter key="anezi_imagine.twig.extension.class">Anezi\ImagineBundle\Templating\ImagineExtension</parameter>
        <parameter key="anezi_imagine.templating.helper.class">Anezi\ImagineBundle\Templating\Helper\ImagineHelper</parameter>

        <!-- ImagineInterface implementations -->

        <parameter key="anezi_imagine.gd.class">Imagine\Gd\Imagine</parameter>
        <parameter key="anezi_imagine.imagick.class">Imagine\Imagick\Imagine</parameter>
        <parameter key="anezi_imagine.gmagick.class">Imagine\Gmagick\Imagine</parameter>

        <!-- Filter loaders' classes -->

        <parameter key="anezi_imagine.filter.loader.relative_resize.class">Anezi\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.resize.class">Anezi\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.thumbnail.class">Anezi\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.crop.class">Anezi\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.paste.class">Anezi\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.watermark.class">Anezi\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.strip.class">Anezi\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.background.class">Anezi\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.upscale.class">Anezi\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.downscale.class">Anezi\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.auto_rotate.class">Anezi\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.rotate.class">Anezi\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader</parameter>
        <parameter key="anezi_imagine.filter.loader.interlace.class">Anezi\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader</parameter>

        <!-- Data loaders' classes -->

        <parameter key="anezi_imagine.binary.loader.filesystem.class">Anezi\ImagineBundle\Binary\Loader\FileSystemLoader</parameter>
        <parameter key="anezi_imagine.binary.loader.stream.class">Anezi\ImagineBundle\Binary\Loader\StreamLoader</parameter>
        <parameter key="anezi_imagine.binary.loader.flysystem.class">Anezi\ImagineBundle\Binary\Loader\FlysystemLoader</parameter>

        <!-- Cache resolvers' classes -->

        <parameter key="anezi_imagine.cache.resolver.web_path.class">Anezi\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver</parameter>
        <parameter key="anezi_imagine.cache.resolver.no_cache_web_path.class">Anezi\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver</parameter>
        <parameter key="anezi_imagine.cache.resolver.aws_s3.class">Anezi\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver</parameter>
        <parameter key="anezi_imagine.cache.resolver.cache.class">Anezi\ImagineBundle\Imagine\Cache\Resolver\CacheResolver</parameter>
        <parameter key="anezi_imagine.cache.resolver.proxy.class">Anezi\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver</parameter>

        <!-- Form types -->

        <parameter key="anezi_imagine.form.type.image.class">Anezi\ImagineBundle\Form\Type\ImageType</parameter>

        <parameter key="anezi_imagine.meta_data.reader.class">Imagine\Image\Metadata\ExifMetadataReader</parameter>

        <!-- Post processors' classes -->
        <parameter key="anezi_imagine.filter.post_processor.jpegoptim.class">Anezi\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor</parameter>
        <parameter key="anezi_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>

        <parameter key="anezi_imagine.filter.post_processor.optipng.class">Anezi\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor</parameter>
        <parameter key="anezi_imagine.optipng.binary">/usr/bin/optipng</parameter>

        <parameter key="anezi_imagine.filter.post_processor.pngquant.class">Anezi\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor</parameter>
        <parameter key="anezi_imagine.pngquant.binary">/usr/bin/pngquant</parameter>

        <parameter key="anezi_imagine.filter.post_processor.mozjpeg.class">Anezi\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor</parameter>
        <parameter key="anezi_imagine.mozjpeg.binary">/opt/mozjpeg/bin/cjpeg</parameter>

    </parameters>

    <services>
        <!-- Utility services -->

        <service id="anezi_imagine.filter.manager" class="%anezi_imagine.filter.manager.class%">
            <argument type="service" id="anezi_imagine.filter.configuration" />
            <argument type="service" id="anezi_imagine" />
            <argument type="service" id="anezi_imagine.binary.mime_type_guesser" />
        </service>

        <service id="anezi_imagine.data.manager" class="%anezi_imagine.data.manager.class%">
            <argument type="service" id="anezi_imagine.binary.mime_type_guesser" />
            <argument type="service" id="anezi_imagine.extension_guesser" />
            <argument type="service" id="anezi_imagine.filter.configuration" />
            <argument>%anezi_imagine.binary.loader.default%</argument>
            <argument>%anezi_imagine.default_image%</argument>
        </service>

        <service id="anezi_imagine.cache.manager" class="%anezi_imagine.cache.manager.class%">
            <argument type="service" id="anezi_imagine.filter.configuration" />
            <argument type="service" id="router" />
            <argument type="service" id="anezi_imagine.cache.signer" />
            <argument type="service" id="event_dispatcher" />
            <argument>%anezi_imagine.cache.resolver.default%</argument>
        </service>

        <service id="anezi_imagine.filter.configuration" class="%anezi_imagine.filter.configuration.class%">
            <argument>%anezi_imagine.filter_sets%</argument>
        </service>

        <!-- Controller -->

        <service id="anezi_imagine.controller" class="%anezi_imagine.controller.class%">
            <argument type="service" id="anezi_imagine.data.manager" />
            <argument type="service" id="anezi_imagine.filter.manager" />
            <argument type="service" id="anezi_imagine.cache.manager" />
            <argument type="service" id="anezi_imagine.cache.signer" />
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>

        <service id="anezi_imagine.meta_data.reader" class="%anezi_imagine.meta_data.reader.class%" public="false" />

        <!-- ImagineInterface instances -->

        <service id="anezi_imagine" alias="anezi_imagine.gd" />

        <service id="anezi_imagine.gd" class="%anezi_imagine.gd.class%" public="false" />

        <service id="anezi_imagine.imagick" class="%anezi_imagine.imagick.class%" public="false" />

        <service id="anezi_imagine.gmagick" class="%anezi_imagine.gmagick.class%" public="false" />

        <!--  Templating helpers and extensions -->

        <service id="anezi_imagine.twig.extension" class="%anezi_imagine.twig.extension.class%" public="false">
            <tag name="twig.extension" />
            <argument type="service" id="anezi_imagine.cache.manager" />
        </service>

        <service id="anezi_imagine.templating.helper" class="%anezi_imagine.templating.helper.class%">
            <tag name="templating.helper" alias="imagine" />
            <argument type="service" id="anezi_imagine.cache.manager" />
        </service>

        <!-- Filter loaders -->

        <service id="anezi_imagine.filter.loader.relative_resize" class="%anezi_imagine.filter.loader.relative_resize.class%">
            <tag name="anezi_imagine.filter.loader" loader="relative_resize" />
        </service>

        <service id="anezi_imagine.filter.loader.resize" class="%anezi_imagine.filter.loader.resize.class%">
            <tag name="anezi_imagine.filter.loader" loader="resize" />
        </service>

        <service id="anezi_imagine.filter.loader.thumbnail" class="%anezi_imagine.filter.loader.thumbnail.class%">
            <tag name="anezi_imagine.filter.loader" loader="thumbnail" />
        </service>

        <service id="anezi_imagine.filter.loader.crop" class="%anezi_imagine.filter.loader.crop.class%">
            <tag name="anezi_imagine.filter.loader" loader="crop" />
        </service>

        <service id="anezi_imagine.filter.loader.paste" class="%anezi_imagine.filter.loader.paste.class%">
            <tag name="anezi_imagine.filter.loader" loader="paste" />
            <argument type="service" id="anezi_imagine" />
            <argument>%kernel.root_dir%</argument>
        </service>

        <service id="anezi_imagine.filter.loader.watermark" class="%anezi_imagine.filter.loader.watermark.class%">
            <tag name="anezi_imagine.filter.loader" loader="watermark" />
            <argument type="service" id="anezi_imagine" />
            <argument>%kernel.root_dir%</argument>
        </service>

        <service id="anezi_imagine.filter.loader.background" class="%anezi_imagine.filter.loader.background.class%">
            <tag name="anezi_imagine.filter.loader" loader="background" />
            <argument type="service" id="anezi_imagine" />
        </service>

        <service id="anezi_imagine.filter.loader.strip" class="%anezi_imagine.filter.loader.strip.class%">
            <tag name="anezi_imagine.filter.loader" loader="strip" />
        </service>

        <service id="anezi_imagine.filter.loader.upscale" class="%anezi_imagine.filter.loader.upscale.class%">
            <tag name="anezi_imagine.filter.loader" loader="upscale" />
        </service>

        <service id="anezi_imagine.filter.loader.downscale" class="%anezi_imagine.filter.loader.downscale.class%">
            <tag name="anezi_imagine.filter.loader" loader="downscale" />
        </service>

        <service id="anezi_imagine.filter.loader.auto_rotate" class="%anezi_imagine.filter.loader.auto_rotate.class%">
            <tag name="anezi_imagine.filter.loader" loader="auto_rotate" />
        </service>

        <service id="anezi_imagine.filter.loader.rotate" class="%anezi_imagine.filter.loader.rotate.class%">
            <tag name="anezi_imagine.filter.loader" loader="rotate" />
        </service>

        <service id="anezi_imagine.filter.loader.interlace" class="%anezi_imagine.filter.loader.interlace.class%">
            <tag name="anezi_imagine.filter.loader" loader="interlace" />
        </service>

        <!-- Data loaders -->

        <service id="anezi_imagine.binary.loader.prototype.filesystem" class="%anezi_imagine.binary.loader.filesystem.class%">
            <argument type="service" id="anezi_imagine.mime_type_guesser" />
            <argument type="service" id="anezi_imagine.extension_guesser" />
            <argument><!-- will be injected by FileSystemLoaderFactory --></argument>
        </service>

        <service id="anezi_imagine.binary.loader.prototype.stream" class="%anezi_imagine.binary.loader.stream.class%">
            <argument><!-- will be injected by StreamLoaderFactory --></argument>
            <argument><!-- will be injected by StreamLoaderFactory --></argument>
        </service>
        
        <service id="anezi_imagine.binary.loader.prototype.flysystem" class="%anezi_imagine.binary.loader.flysystem.class%" abstract="true">
            <argument type="service" id="anezi_imagine.extension_guesser" />
            <argument><!-- will be injected by FlysystemLoaderFactory --></argument>
        </service>

        <!-- Cache resolver -->

        <service id="anezi_imagine.cache.resolver.prototype.web_path" class="%anezi_imagine.cache.resolver.web_path.class%" public="true" abstract="true">
            <argument type="service" id="filesystem" />
            <argument type="service" id="router.request_context" />
            <argument><!-- will be injected by WebPathResolverFactory --></argument>
            <argument><!-- will be injected by WebPathResolverFactory --></argument>
        </service>

        <service id="anezi_imagine.cache.resolver.prototype.aws_s3" class="%anezi_imagine.cache.resolver.aws_s3.class%" public="true" abstract="true">
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
        </service>

        <service id="anezi_imagine.cache.resolver.prototype.cache" class="%anezi_imagine.cache.resolver.cache.class%" public="true" abstract="true">
            <argument><!-- will be injected by a ResolverFactory --></argument>
            <argument><!-- will be injected by a ResolverFactory --></argument>
        </service>

        <service id="anezi_imagine.cache.resolver.prototype.proxy" class="%anezi_imagine.cache.resolver.proxy.class%" public="true" abstract="true">
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
            <argument><!-- will be injected by AwsS3ResolverFactory --></argument>
        </service>

        <service id="anezi_imagine.cache.resolver.no_cache_web_path" class="%anezi_imagine.cache.resolver.no_cache_web_path.class%" public="true">
            <argument type="service" id="router.request_context" />
            <tag name="anezi_imagine.cache.resolver" resolver="no_cache" />
        </service>

        <!-- Form types -->

        <service id="anezi_imagine.form.type.image" class="%anezi_imagine.form.type.image.class%">
            <tag name="form.type" alias="anezi_imagine_image" />
        </service>

        <!-- Guessers -->

        <service
            id="anezi_imagine.mime_type_guesser"
            class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface"
        />

        <service
            id="anezi_imagine.extension_guesser"
            class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface"
        />

        <service id="anezi_imagine.binary.mime_type_guesser" class="%anezi_imagine.binary.mime_type_guesser.class%">
            <argument type="service" id="anezi_imagine.mime_type_guesser" />
        </service>

        <service id="anezi_imagine.cache.signer" class="%anezi_imagine.cache.signer.class%">
            <argument>%kernel.secret%</argument>
        </service>

        <!-- Post processors -->
        <service id="anezi_imagine.filter.post_processor.jpegoptim" class="%anezi_imagine.filter.post_processor.jpegoptim.class%">
            <argument>%anezi_imagine.jpegoptim.binary%</argument>
            <tag name="anezi_imagine.filter.post_processor" post_processor="jpegoptim" />
        </service>
        <service id="anezi_imagine.filter.post_processor.optipng" class="%anezi_imagine.filter.post_processor.optipng.class%">
            <argument>%anezi_imagine.optipng.binary%</argument>
            <tag name="anezi_imagine.filter.post_processor" post_processor="optipng" />
        </service>
        <service id="anezi_imagine.filter.post_processor.pngquant" class="%anezi_imagine.filter.post_processor.pngquant.class%">
            <argument>%anezi_imagine.pngquant.binary%</argument>
            <tag name="anezi_imagine.filter.post_processor" post_processor="pngquant" />
        </service>
        <service id="anezi_imagine.filter.post_processor.mozjpeg" class="%anezi_imagine.filter.post_processor.mozjpeg.class%">
            <argument>%anezi_imagine.mozjpeg.binary%</argument>
            <tag name="anezi_imagine.filter.post_processor" post_processor="mozjpeg" />
        </service>
    </services>
</container>
